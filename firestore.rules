rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }
    
    // Users collection - allow reading for admin access
    match /Users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      // Allow admins to read all user profiles
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/Users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Products collection - read for all, write for admins only
    match /Products/{productId} {
      allow read: if true; // Anyone can read products
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/Users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Orders collection - users can create and read their own orders, admins can read all
    match /orders/{orderId} {
      // Allow Firebase Functions (admin SDK) to create orders
      allow create: if true;
      
      // Users can read their own orders (authentication required)
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Admins can read and update all orders
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/Users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Customers collection - for admin access
    match /customers/{customerId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/Users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}